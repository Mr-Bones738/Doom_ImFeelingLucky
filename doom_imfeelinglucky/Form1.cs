using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.IO;
using System.Net;
#pragma warning disable IDE1006 // autogenerated names tick off intellisense. more like dumbsense lmao
namespace doom_imfeelinglucky
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
        }
        private string helpMsg = @"Buttons:
  Download: Downloads a random WAD from /idgames/
  View TXT: Views a text file if one is present.
  Play: What do you think?
  Save: Copies the WAD to another folder, it won't be overwritten when you download a new one.
Boxes:
  Include Terry: ""Terrywads"" (troll WADS) will be included in the download list. Fair warning that these will almost always contain overtly sexual text content and may contain sexual imagery too.
  Force Update: Clicking Download with this checked will force the file list to update from FTP. Use this every now and then.";
        private string f;
        private string root = "ftp://ftp.fu-berlin.de";
        private FtpWebRequest req;
        private FtpWebResponse resp;
        private List<string> files;
        Random rnd;
        private void WriteLine(string line)
        {
            logBox.AppendText(line);
            logBox.AppendText(Environment.NewLine);
        }
        private void GetFilesRecursive(string path)
        {
            req = (FtpWebRequest)WebRequest.Create(root + path);
            req.Method = WebRequestMethods.Ftp.ListDirectory;
            req.Credentials = new NetworkCredential("anonymous", "im_a_robot");
            resp = (FtpWebResponse)req.GetResponse();
            Stream respStream = resp.GetResponseStream();
            StreamReader reader = new StreamReader(respStream);
            string responseString = reader.ReadToEnd();
            foreach (string l in responseString.Split(new[] { "\r\n", "\r", "\n" }, StringSplitOptions.None))
            {
                if (l.Contains(".zip"))
                {
                    files.Add(path + l);
                }
                else if (l.Contains(".txt") || l == string.Empty || l.Contains("deathmatch"))
                {
                    continue;
                }
                else
                {
                    try
                    {
                        GetFilesRecursive(path + l + "/");
                    }
                    catch
                    {
                        continue;
                    }
                }
            }
            reader.Close();
            resp.Close();
        }
        // the download button i'm too lazy to rename.
        private void button1_Click(object sender, EventArgs e)
        {
            files = new List<string>();
            if (!File.Exists("filelist.txt") || chkForceUpd.Checked)
            {
                WriteLine("We are getting the list of files from ftp. this will take a little while but don't worry, once the files are cached we won't need to do this again");
                GetFilesRecursive("/pc/games/idgames/levels/doom/");
                GetFilesRecursive("/pc/games/idgames/levels/doom2/");
                GetFilesRecursive("/pc/games/idgames/themes/terrywads/");
                File.WriteAllLines("filelist.txt", files.ToArray());
            }
            else
            {
                files = File.ReadAllLines("filelist.txt").ToList();
            }
            // now files contains all the files we need
            WriteLine("I'm downloading a random WAD");
            
            f = files[rnd.Next(0, files.Count)];
            while (!isTerry.Checked && f.Contains("terry"))
            {
                f = files[rnd.Next(0, files.Count)];
            }
            req = (FtpWebRequest)WebRequest.Create(root + f);
            req.Method = WebRequestMethods.Ftp.DownloadFile;
            req.Credentials = new NetworkCredential("anonymous", "im_a_robot");
            resp = (FtpWebResponse)req.GetResponse();
            Stream respStream = resp.GetResponseStream();
            byte[] fileBytes;
            using (var memStream = new MemoryStream())
            {
                respStream.CopyTo(memStream);
                fileBytes = memStream.ToArray();
            }
            File.WriteAllBytes("temp.zip", fileBytes);
            respStream.Close();
            WriteLine("I'm extracting the ZIP I got");
            try
            {
                new DirectoryInfo("./temp/").Delete(true);
            }
            catch { }
            
            System.IO.Compression.ZipFile.ExtractToDirectory("temp.zip", "./temp/");
            WriteLine("I think it's done.");
            btnViewTxt.Enabled = true;
            btnPlay.Enabled = true;
        }

        private void Form1_Load(object sender, EventArgs e)
        {
            rnd = new Random();
        }

        private void btnViewTxt_Click(object sender, EventArgs e)
        {
            IEnumerable<FileInfo> filesInDir = new DirectoryInfo("./temp/").EnumerateFiles();
            IEnumerable<FileInfo> t = filesInDir.Where(fil => new string[2] { ".txt", ".TXT" }.Contains(fil.Extension));
            if (t.Count() != 0)
            {
                WriteLine("We have found a text file, take a look.");
                FileInfo textinfo = t.First();
                System.Diagnostics.Process.Start("notepad.exe", textinfo.FullName);
            }
            else
            {
                WriteLine("No .TXT! Sorry.");
            }
        }

        private void btnPlay_Click(object sender, EventArgs e)
        {
            WriteLine("Let's go.");
            IEnumerable<FileInfo> filesInDir = new DirectoryInfo("./temp/").EnumerateFiles();
            IEnumerable<FileInfo> a = filesInDir.Where(fil => new string[4] { ".wad", ".pk3", ".WAD", ".PK3" }.Contains(fil.Extension));
            if (a.Count() == 0)
            {
                WriteLine("No WAD or PK3. Try another, please.");
                return;
            }
            string iwad = "doom2.wad"; // we default to doom2.wad because most mods will be for d2
            if (!f.Contains("doom2"))
                iwad = "doom.wad";
            string wad = a.First().FullName;
            WriteLine("Command: E:/DoomStuff/GZDoom/gzdoom.exe" + "-iwad " + iwad + " -file " + wad);
            System.Diagnostics.ProcessStartInfo info = new System.Diagnostics.ProcessStartInfo("E:/DoomStuff/GZDoom/gzdoom.exe", "-iwad " + iwad + " -file " + wad)
            {
                WorkingDirectory = "E:\\DoomStuff\\GZDoom\\"
            };
            WriteLine("Starting. Have fun :)");
            System.Diagnostics.Process.Start(info);
        }

        private void button2_Click(object sender, EventArgs e)
        {
            IEnumerable<FileInfo> filesInDir = new DirectoryInfo("./temp/").EnumerateFiles();
            foreach(FileInfo f in filesInDir)
            {
                f.CopyTo("./perma/" + f.Name);
            }
        }

        private void btnHelp_Click(object sender, EventArgs e)
        {
            MessageBox.Show(helpMsg);
        }
    }
}
